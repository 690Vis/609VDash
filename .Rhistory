library(dplyr)
library(ggplot2)
rm(list = ls()) # clean memory
location='https://github.com/DACSS-Visual/tabular_univar_cat/raw/main/data/'
file='eduwa.rda'
link=paste0(location,file)
# getting the data TABLE from the file in the cloud:
load(file=url(link))
# looking at the dimension
dim(eduwa)
# viewing the names of each column
names(eduwa)
# helped by this example: https://rpubs.com/dav1d00/ggpareto
# creating a new df
df <- eduwa %>%
select(County, Reduced.Lunch) %>%  # only keeping columns I want
na.omit() # removing NAs
# summing reduced lunches by each county
df <- summarise_all(group_by(df, County), sum)
df <- df %>%
arrange(desc(Reduced.Lunch)) # arranging by reduced lunch
# making the counties ordered
df$County <- ordered(df$County, levels = unlist(df$County, use.names = F))
# viewing df
df
df <- df %>%
mutate(cumRL = cumsum(Reduced.Lunch), # adding a column for the cumulative sums
percentage = round((cumRL / sum(df$Reduced.Lunch)) * 100, digits = 2)) # adding a column for the cumulative percentage
# viewing the df
df
# getting the right scaling for the second y-axis
scaling <- 100 / max(df$cumRL)
scaling
# helped by this example: https://www.youtube.com/watch?v=IX0QvffX9n0&ab_channel=stikpet
df$Color <- ifelse(1:nrow(df) <= 5, "red", "grey")
plot <- ggplot(df, aes(x = County)) + # x axis is the Counties
geom_col(aes(y = Reduced.Lunch), fill = Color) + # first y axis is the count of Reduced Lunch for each county
geom_point(aes(y = cumRL)) + # the points on the plot for the cumulation of students in the state who receive reduced lunch
geom_path(aes(y = cumRL), group = 1, color = "black", linewidth = 0.7) + # the line of cumulation
scale_y_continuous(sec.axis = sec_axis(transform = ~.*0.001298786, # creating the second y-axis with the correct scaling
name = "Cumulative (%)", # name of second y-axis
breaks = seq(0, 100, by = 25))) + # how the axis numbers will be shown
labs(title = "Five Washington Counties Account for 80% of Reduced Lunch Recipients", # title
subtitle = "How many students receive reduced lunch in each county of Washington", # subtitle
y = "Reduced Lunch") + # first y-axis name
theme_bw() + # theme for plot
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1), # making the x-axis readable
panel.grid.major = element_blank(), panel.grid.minor = element_blank(), # making everything blank!
panel.background = element_blank())
# helped by this example: https://www.youtube.com/watch?v=IX0QvffX9n0&ab_channel=stikpet
df$Color <- ifelse(1:nrow(df) <= 5, "red", "grey")
plot <- ggplot(df, aes(x = County)) + # x axis is the Counties
geom_col(aes(y = Reduced.Lunch), fill = Color) + # first y axis is the count of Reduced Lunch for each county
geom_point(aes(y = cumRL)) + # the points on the plot for the cumulation of students in the state who receive reduced lunch
geom_path(aes(y = cumRL), group = 1, color = "black", linewidth = 0.7) + # the line of cumulation
scale_y_continuous(sec.axis = sec_axis(transform = ~.*0.001298786, # creating the second y-axis with the correct scaling
name = "Cumulative (%)", # name of second y-axis
breaks = seq(0, 100, by = 25))) + # how the axis numbers will be shown
labs(title = "Five Washington Counties Account for 80% of Reduced Lunch Recipients", # title
subtitle = "How many students receive reduced lunch in each county of Washington", # subtitle
y = "Reduced Lunch") + # first y-axis name
theme_bw() + # theme for plot
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1), # making the x-axis readable
panel.grid.major = element_blank(), panel.grid.minor = element_blank(), # making everything blank!
panel.background = element_blank())
# helped by this example: https://www.youtube.com/watch?v=IX0QvffX9n0&ab_channel=stikpet
df$Color <- ifelse(1:nrow(df) <= 5, "red", "grey")
plot <- ggplot(df, aes(x = County)) + # x axis is the Counties
geom_col(aes(y = Reduced.Lunch), fill = Color) + # first y axis is the count of Reduced Lunch for each county
geom_point(aes(y = cumRL)) + # the points on the plot for the cumulation of students in the state who receive reduced lunch
geom_path(aes(y = cumRL), group = 1, color = "black", linewidth = 0.7) + # the line of cumulation
scale_y_continuous(sec.axis = sec_axis(transform = ~.*0.001298786, # creating the second y-axis with the correct scaling
name = "Cumulative (%)", # name of second y-axis
breaks = seq(0, 100, by = 25))) + # how the axis numbers will be shown
labs(title = "Five Washington Counties Account for 80% of Reduced Lunch Recipients", # title
subtitle = "How many students receive reduced lunch in each county of Washington", # subtitle
y = "Reduced Lunch") + # first y-axis name
theme_bw() + # theme for plot
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1), # making the x-axis readable
panel.grid.major = element_blank(), panel.grid.minor = element_blank(), # making everything blank!
panel.background = element_blank())
# helped by this example: https://www.youtube.com/watch?v=IX0QvffX9n0&ab_channel=stikpet
df$Color <- ifelse(1:nrow(df) <= 5, "red", "grey")
plot <- ggplot(df, aes(x = County)) + # x axis is the Counties
geom_col(aes(y = Reduced.Lunch, fill = Color)) + # first y axis is the count of Reduced Lunch for each county
geom_point(aes(y = cumRL)) + # the points on the plot for the cumulation of students in the state who receive reduced lunch
geom_path(aes(y = cumRL), group = 1, color = "black", linewidth = 0.7) + # the line of cumulation
scale_y_continuous(sec.axis = sec_axis(transform = ~.*0.001298786, # creating the second y-axis with the correct scaling
name = "Cumulative (%)", # name of second y-axis
breaks = seq(0, 100, by = 25))) + # how the axis numbers will be shown
labs(title = "Five Washington Counties Account for 80% of Reduced Lunch Recipients", # title
subtitle = "How many students receive reduced lunch in each county of Washington", # subtitle
y = "Reduced Lunch") + # first y-axis name
theme_bw() + # theme for plot
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1), # making the x-axis readable
panel.grid.major = element_blank(), panel.grid.minor = element_blank(), # making everything blank!
panel.background = element_blank())
# printing plot
plot
# helped by this example: https://www.youtube.com/watch?v=IX0QvffX9n0&ab_channel=stikpet
df$Color <- ifelse(1:nrow(df) <= 5)
# helped by this example: https://www.youtube.com/watch?v=IX0QvffX9n0&ab_channel=stikpet
df$Color <- ifelse(1:nrow(df) <= 5, "red", "grey")
plot <- ggplot(df, aes(x = County)) + # x axis is the Counties
geom_col(aes(y = Reduced.Lunch, fill = Color)) + # first y axis is the count of Reduced Lunch for each county
geom_point(aes(y = cumRL)) + # the points on the plot for the cumulation of students in the state who receive reduced lunch
geom_path(aes(y = cumRL), group = 1, color = "black", linewidth = 0.7) + # the line of cumulation
scale_y_continuous(sec.axis = sec_axis(transform = ~.*0.001298786, # creating the second y-axis with the correct scaling
name = "Cumulative (%)", # name of second y-axis
breaks = seq(0, 100, by = 25))) + # how the axis numbers will be shown
labs(title = "Five Washington Counties Account for 80% of Reduced Lunch Recipients", # title
subtitle = "How many students receive reduced lunch in each county of Washington", # subtitle
y = "Reduced Lunch") + # first y-axis name
theme_bw() + # theme for plot
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1), # making the x-axis readable
panel.grid.major = element_blank(), panel.grid.minor = element_blank(), # making everything blank!
panel.background = element_blank())
# printing plot
plot
# helped by this example: https://www.youtube.com/watch?v=IX0QvffX9n0&ab_channel=stikpet
df$Color <- ifelse(1:nrow(df) <= 5, "red", "grey")
plot <- ggplot(df, aes(x = County)) + # x axis is the Counties
geom_col(aes(y = Reduced.Lunch, fill = Color)) + # first y axis is the count of Reduced Lunch for each county
geom_point(aes(y = cumRL)) + # the points on the plot for the cumulation of students in the state who receive reduced lunch
geom_path(aes(y = cumRL), group = 1, color = "black", linewidth = 0.7) + # the line of cumulation
scale_y_continuous(sec.axis = sec_axis(transform = ~.*0.001298786, # creating the second y-axis with the correct scaling
name = "Cumulative (%)", # name of second y-axis
breaks = seq(0, 100, by = 25))) + # how the axis numbers will be shown
labs(title = "Five Washington Counties Account for 80% of Reduced Lunch Recipients", # title
subtitle = "How many students receive reduced lunch in each county of Washington", # subtitle
y = "Reduced Lunch") + # first y-axis name
theme_bw() + # theme for plot
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1), # making the x-axis readable
panel.grid.major = element_blank(), panel.grid.minor = element_blank(), # making everything blank!
panel.background = element_blank()) +
scale_fill_manual(values = c("red", "grey"))
# printing plot
plot
# helped by this example: https://www.youtube.com/watch?v=IX0QvffX9n0&ab_channel=stikpet
df$Color <- ifelse(1:nrow(df) <= 5, "grey", "red")
plot <- ggplot(df, aes(x = County)) + # x axis is the Counties
geom_col(aes(y = Reduced.Lunch, fill = Color)) + # first y axis is the count of Reduced Lunch for each county
geom_point(aes(y = cumRL)) + # the points on the plot for the cumulation of students in the state who receive reduced lunch
geom_path(aes(y = cumRL), group = 1, color = "black", linewidth = 0.7) + # the line of cumulation
scale_y_continuous(sec.axis = sec_axis(transform = ~.*0.001298786, # creating the second y-axis with the correct scaling
name = "Cumulative (%)", # name of second y-axis
breaks = seq(0, 100, by = 25))) + # how the axis numbers will be shown
labs(title = "Five Washington Counties Account for 80% of Reduced Lunch Recipients", # title
subtitle = "How many students receive reduced lunch in each county of Washington", # subtitle
y = "Reduced Lunch") + # first y-axis name
theme_bw() + # theme for plot
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1), # making the x-axis readable
panel.grid.major = element_blank(), panel.grid.minor = element_blank(), # making everything blank!
panel.background = element_blank()) +
scale_fill_manual(values = c("red", "grey"))
# printing plot
plot
# helped by this example: https://www.youtube.com/watch?v=IX0QvffX9n0&ab_channel=stikpet
df$Color <- ifelse(1:nrow(df) <= 5, "20%", "80%")
plot <- ggplot(df, aes(x = County)) + # x axis is the Counties
geom_col(aes(y = Reduced.Lunch, fill = Color)) + # first y axis is the count of Reduced Lunch for each county
geom_point(aes(y = cumRL)) + # the points on the plot for the cumulation of students in the state who receive reduced lunch
geom_path(aes(y = cumRL), group = 1, color = "black", linewidth = 0.7) + # the line of cumulation
scale_y_continuous(sec.axis = sec_axis(transform = ~.*0.001298786, # creating the second y-axis with the correct scaling
name = "Cumulative (%)", # name of second y-axis
breaks = seq(0, 100, by = 25))) + # how the axis numbers will be shown
labs(title = "Five Washington Counties Account for 80% of Reduced Lunch Recipients", # title
subtitle = "How many students receive reduced lunch in each county of Washington", # subtitle
y = "Reduced Lunch") + # first y-axis name
theme_bw() + # theme for plot
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1), # making the x-axis readable
panel.grid.major = element_blank(), panel.grid.minor = element_blank(), # making everything blank!
panel.background = element_blank()) +
scale_fill_manual(values = c("red", "grey"))
# printing plot
plot
# helped by this example: https://www.youtube.com/watch?v=IX0QvffX9n0&ab_channel=stikpet
df$Color <- ifelse(1:nrow(df) <= 5, "80%", "20%")
plot <- ggplot(df, aes(x = County)) + # x axis is the Counties
geom_col(aes(y = Reduced.Lunch, fill = Color)) + # first y axis is the count of Reduced Lunch for each county
geom_point(aes(y = cumRL)) + # the points on the plot for the cumulation of students in the state who receive reduced lunch
geom_path(aes(y = cumRL), group = 1, color = "black", linewidth = 0.7) + # the line of cumulation
scale_y_continuous(sec.axis = sec_axis(transform = ~.*0.001298786, # creating the second y-axis with the correct scaling
name = "Cumulative (%)", # name of second y-axis
breaks = seq(0, 100, by = 25))) + # how the axis numbers will be shown
labs(title = "Five Washington Counties Account for 80% of Reduced Lunch Recipients", # title
subtitle = "How many students receive reduced lunch in each county of Washington", # subtitle
y = "Reduced Lunch") + # first y-axis name
theme_bw() + # theme for plot
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1), # making the x-axis readable
panel.grid.major = element_blank(), panel.grid.minor = element_blank(), # making everything blank!
panel.background = element_blank()) +
scale_fill_manual(values = c("red", "grey"))
# printing plot
plot
# helped by this example: https://www.youtube.com/watch?v=IX0QvffX9n0&ab_channel=stikpet
df$Color <- ifelse(1:nrow(df) <= 5, "grey", "red")
plot <- ggplot(df, aes(x = County)) + # x axis is the Counties
geom_col(aes(y = Reduced.Lunch, fill = Color)) + # first y axis is the count of Reduced Lunch for each county
geom_point(aes(y = cumRL)) + # the points on the plot for the cumulation of students in the state who receive reduced lunch
geom_path(aes(y = cumRL), group = 1, color = "black", linewidth = 0.7) + # the line of cumulation
scale_y_continuous(sec.axis = sec_axis(transform = ~.*0.001298786, # creating the second y-axis with the correct scaling
name = "Cumulative (%)", # name of second y-axis
breaks = seq(0, 100, by = 25))) + # how the axis numbers will be shown
labs(title = "Five Washington Counties Account for 80% of Reduced Lunch Recipients", # title
subtitle = "How many students receive reduced lunch in each county of Washington", # subtitle
y = "Reduced Lunch") + # first y-axis name
theme_bw() + # theme for plot
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1), # making the x-axis readable
panel.grid.major = element_blank(), panel.grid.minor = element_blank(), # making everything blank!
panel.background = element_blank()) +
scale_fill_manual(values = c("red", "grey"))
# printing plot
plot
# helped by this example: https://www.youtube.com/watch?v=IX0QvffX9n0&ab_channel=stikpet
df$Color <- ifelse(1:nrow(df) <= 5, "grey", "red")
plot <- ggplot(df, aes(x = County)) + # x axis is the Counties
geom_col(aes(y = Reduced.Lunch, fill = Color)) + # first y axis is the count of Reduced Lunch for each county
geom_point(aes(y = cumRL)) + # the points on the plot for the cumulation of students in the state who receive reduced lunch
geom_path(aes(y = cumRL), group = 1, color = "black", linewidth = 0.7) + # the line of cumulation
scale_y_continuous(sec.axis = sec_axis(transform = ~.*0.001298786, # creating the second y-axis with the correct scaling
name = "Cumulative (%)", # name of second y-axis
breaks = seq(0, 100, by = 25))) + # how the axis numbers will be shown
labs(title = "Five Washington Counties Account for 80% of Reduced Lunch Recipients", # title
subtitle = "How many students receive reduced lunch in each county of Washington", # subtitle
y = "Reduced Lunch") + # first y-axis name
theme_bw() + # theme for plot
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1), # making the x-axis readable
panel.grid.major = element_blank(), panel.grid.minor = element_blank(), # making everything blank!
panel.background = element_blank()) +
scale_fill_manual(values = c("red", "grey"),
labels = c("Top 5 Counties", "Other Counties"))
# printing plot
plot
# helped by this example: https://www.youtube.com/watch?v=IX0QvffX9n0&ab_channel=stikpet
df$Color <- ifelse(1:nrow(df) <= 5, "grey", "red")
plot <- ggplot(df, aes(x = County)) + # x axis is the Counties
geom_col(aes(y = Reduced.Lunch, fill = Color)) + # first y axis is the count of Reduced Lunch for each county
geom_point(aes(y = cumRL)) + # the points on the plot for the cumulation of students in the state who receive reduced lunch
geom_path(aes(y = cumRL), group = 1, color = "black", linewidth = 0.7) + # the line of cumulation
scale_y_continuous(sec.axis = sec_axis(transform = ~.*0.001298786, # creating the second y-axis with the correct scaling
name = "Cumulative (%)", # name of second y-axis
breaks = seq(0, 100, by = 25))) + # how the axis numbers will be shown
labs(title = "Five Washington Counties Account for 80% of Reduced Lunch Recipients", # title
subtitle = "How many students receive reduced lunch in each county of Washington", # subtitle
y = "Reduced Lunch") + # first y-axis name
theme_bw() + # theme for plot
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1), # making the x-axis readable
panel.grid.major = element_blank(), panel.grid.minor = element_blank(), # making everything blank!
panel.background = element_blank()) +
scale_fill_manual(values = c("red", "grey"),
labels = c("Counties with 80% of Recipients", "Other Counties")) +
guides(fill = guide_legend(title = "County Type"))
# printing plot
plot
# helped by this example: https://www.youtube.com/watch?v=IX0QvffX9n0&ab_channel=stikpet
df$Color <- ifelse(1:nrow(df) <= 5, "grey", "red")
plot <- ggplot(df, aes(x = County)) + # x axis is the Counties
geom_col(aes(y = Reduced.Lunch, fill = Color)) + # first y axis is the count of Reduced Lunch for each county
geom_point(aes(y = cumRL)) + # the points on the plot for the cumulation of students in the state who receive reduced lunch
geom_path(aes(y = cumRL), group = 1, color = "black", linewidth = 0.7) + # the line of cumulation
scale_y_continuous(sec.axis = sec_axis(transform = ~.*0.001298786, # creating the second y-axis with the correct scaling
name = "Cumulative (%)", # name of second y-axis
breaks = seq(0, 100, by = 25))) + # how the axis numbers will be shown
labs(title = "Five Washington Counties Account for 80% of Reduced Lunch Recipients", # title
subtitle = "How many students receive reduced lunch in each county of Washington", # subtitle
y = "Reduced Lunch") + # first y-axis name
theme_bw() + # theme for plot
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1), # making the x-axis readable
panel.grid.major = element_blank(), panel.grid.minor = element_blank(), # making everything blank!
panel.background = element_blank()) +
scale_fill_manual(values = c("red", "grey"),
labels = c("80% of Recipients", "20% of Recipients")) +
guides(fill = guide_legend(title = "County Type"))
# printing plot
plot
# helped by this example: https://www.youtube.com/watch?v=IX0QvffX9n0&ab_channel=stikpet
df$Color <- ifelse(1:nrow(df) <= 5, "grey", "red")
plot <- ggplot(df, aes(x = County)) + # x axis is the Counties
geom_col(aes(y = Reduced.Lunch, fill = Color)) + # first y axis is the count of Reduced Lunch for each county
geom_point(aes(y = cumRL)) + # the points on the plot for the cumulation of students in the state who receive reduced lunch
geom_path(aes(y = cumRL), group = 1, color = "black", linewidth = 0.7) + # the line of cumulation
scale_y_continuous(sec.axis = sec_axis(transform = ~.*0.001298786, # creating the second y-axis with the correct scaling
name = "Cumulative (%)", # name of second y-axis
breaks = seq(0, 100, by = 25))) + # how the axis numbers will be shown
labs(title = "Five Washington Counties Account for 80% of Reduced Lunch Recipients", # title
subtitle = "How many students receive reduced lunch in each county of Washington", # subtitle
y = "Reduced Lunch") + # first y-axis name
theme_bw() + # theme for plot
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1), # making the x-axis readable
panel.grid.major = element_blank(), panel.grid.minor = element_blank(), # making everything blank!
panel.background = element_blank()) +
scale_fill_manual(values = c("red", "grey"),
labels = c("Counties with largest # of recipients", "Other")) +
guides(fill = guide_legend(title = "County Type"))
# printing plot
plot
# helped by this example: https://www.youtube.com/watch?v=IX0QvffX9n0&ab_channel=stikpet
df$Color <- ifelse(1:nrow(df) <= 5, "grey", "red")
plot <- ggplot(df, aes(x = County)) + # x axis is the Counties
geom_col(aes(y = Reduced.Lunch, fill = Color)) + # first y axis is the count of Reduced Lunch for each county
geom_point(aes(y = cumRL)) + # the points on the plot for the cumulation of students in the state who receive reduced lunch
geom_path(aes(y = cumRL), group = 1, color = "black", linewidth = 0.7) + # the line of cumulation
scale_y_continuous(sec.axis = sec_axis(transform = ~.*0.001298786, # creating the second y-axis with the correct scaling
name = "Cumulative (%)", # name of second y-axis
breaks = seq(0, 100, by = 25))) + # how the axis numbers will be shown
labs(title = "Five Washington Counties Account for 80% of Reduced Lunch Recipients", # title
subtitle = "How many students receive reduced lunch in each county of Washington", # subtitle
y = "Reduced Lunch") + # first y-axis name
theme_bw() + # theme for plot
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1), # making the x-axis readable
panel.grid.major = element_blank(), panel.grid.minor = element_blank(), # making everything blank!
panel.background = element_blank()) +
scale_fill_manual(values = c("red", "grey"),
labels = c("Largest # of recipients", "Other")) +
guides(fill = guide_legend(title = "County Type"))
# printing plot
plot
# helped by this example: https://www.youtube.com/watch?v=IX0QvffX9n0&ab_channel=stikpet
df$Color <- ifelse(1:nrow(df) <= 5, "grey", "red")
plot <- ggplot(df, aes(x = County)) + # x axis is the Counties
geom_col(aes(y = Reduced.Lunch, fill = Color)) + # first y axis is the count of Reduced Lunch for each county
geom_point(aes(y = cumRL)) + # the points on the plot for the cumulation of students in the state who receive reduced lunch
geom_path(aes(y = cumRL), group = 1, color = "black", linewidth = 0.7) + # the line of cumulation
scale_y_continuous(sec.axis = sec_axis(transform = ~.*0.001298786, # creating the second y-axis with the correct scaling
name = "Cumulative (%)", # name of second y-axis
breaks = seq(0, 100, by = 25))) + # how the axis numbers will be shown
labs(title = "Five Washington Counties Account for 80% of Reduced Lunch Recipients", # title
subtitle = "How many students receive reduced lunch in each county of Washington", # subtitle
y = "Reduced Lunch") + # first y-axis name
theme_bw() + # theme for plot
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1), # making the x-axis readable
panel.grid.major = element_blank(), panel.grid.minor = element_blank(), # making everything blank!
panel.background = element_blank()) +
scale_fill_manual(values = c("red", "grey"),
labels = c("Counties that make up 80%", "Other")) +
guides(fill = guide_legend(title = "County Type"))
# printing plot
plot
library(dplyr)
library(ggplot2)
rm(list = ls()) # clean memory
location='https://github.com/DACSS-Visual/tabular_univar_cat/raw/main/data/'
file='eduwa.rda'
link=paste0(location,file)
# getting the data TABLE from the file in the cloud:
load(file=url(link))
# looking at the dimension
dim(eduwa)
# viewing the names of each column
names(eduwa)
# helped by this example: https://rpubs.com/dav1d00/ggpareto
# creating a new df
df <- eduwa %>%
select(County, Reduced.Lunch) %>%  # only keeping columns I want
na.omit() # removing NAs
# summing reduced lunches by each county
df <- summarise_all(group_by(df, County), sum)
df <- df %>%
arrange(desc(Reduced.Lunch)) # arranging by reduced lunch
# making the counties ordered
df$County <- ordered(df$County, levels = unlist(df$County, use.names = F))
# viewing df
df
df <- df %>%
mutate(cumRL = cumsum(Reduced.Lunch), # adding a column for the cumulative sums
percentage = round((cumRL / sum(df$Reduced.Lunch)) * 100, digits = 2)) # adding a column for the cumulative percentage
# viewing the df
df
# getting the right scaling for the second y-axis
scaling <- 100 / max(df$cumRL)
scaling
# helped by this example: https://www.youtube.com/watch?v=IX0QvffX9n0&ab_channel=stikpet
df$Color <- ifelse(1:nrow(df) <= 5, "grey", "red")
plot <- ggplot(df, aes(x = County)) + # x axis is the Counties
geom_col(aes(y = Reduced.Lunch, fill = Color)) + # first y axis is the count of Reduced Lunch for each county
geom_point(aes(y = cumRL)) + # the points on the plot for the cumulation of students in the state who receive reduced lunch
geom_path(aes(y = cumRL), group = 1, color = "black", linewidth = 0.7) + # the line of cumulation
scale_y_continuous(sec.axis = sec_axis(transform = ~.*0.001298786, # creating the second y-axis with the correct scaling
name = "Cumulative (%)", # name of second y-axis
breaks = seq(0, 100, by = 25))) + # how the axis numbers will be shown
labs(title = "Five Washington Counties Account for 80% of Reduced Lunch Recipients", # title
subtitle = "How many students receive reduced lunch in each county of Washington", # subtitle
y = "Reduced Lunch") + # first y-axis name
theme_bw() + # theme for plot
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1), # making the x-axis readable
panel.grid.major = element_blank(), panel.grid.minor = element_blank(), # making everything blank!
panel.background = element_blank(),
legend.position = "none") +
scale_fill_manual(values = c("red", "grey")) +
guides(fill = guide_legend(title = "County Type"))
# printing plot
plot
# saving plot
saveRDS(plot, file = "Assignment1.rds")
